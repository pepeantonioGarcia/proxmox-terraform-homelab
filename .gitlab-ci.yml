# .gitlab-ci.yml
# The names and order of the pipeline stages
stages:
  - syncGithub
  # Terraform section
  - validate
  - plan
  - apply
  # Terraform section
  #anssible
  - k8s-init
  #ansible

sync:  
  stage: syncGithub
  script:
    - echo "install git"
    - apk update && apk upgrade && apk add git && apk add rsync && apk add --no-cache openssh 
    - mkdir -p ~/.ssh/
    - cp ${id_rsa} ~/.ssh/id_rsa    
    - chmod  0600 ~/.ssh/id_rsa    
    - ssh-keyscan github.com >> ~/.ssh/known_hosts      
    - git config --global user.name "${REMOTE_USER}"
    - git config --global user.email "${REMOTE_EMAIL}"
    - git clone ${REMOTE_REPO} ~/remote
    - export PWD=$(pwd)        
    - rsync -r --exclude='.git/' ${PWD}/ ~/remote --delete    
    - cd ~/remote
    - git checkout ${CI_COMMIT_REF_NAME}    
    - git add .
    - git commit -m "Sync gitlab to Github by Jose Garcia"    
    - git push

validate:
  stage: validate
  rules:
  - changes:
    - terraform/**/*
  before_script:
    - apk add terraform --repository=http://dl-cdn.alpinelinux.org/alpine/v3.12/main
    - apk update && apk upgrade && apk add terraform    
    - cd terraform
    - rm -rf .terraform
    - terraform --version
    - terraform init
  script:    
    - terraform validate    
plan:
  stage: plan
  rules:
  - changes:
    - terraform/**/*
  before_script:
    - apk add terraform --repository=http://dl-cdn.alpinelinux.org/alpine/v3.12/main
    - apk update && apk upgrade && apk add terraform    
    - cd terraform
    - rm -rf .terraform
    - terraform --version
    - terraform init
  script:    
    - terraform plan -out "planfile"
  dependencies:
    - validate
  artifacts:
    paths:
      - terraform/planfile
apply:
  stage: apply
  rules:
  - changes:
    - terraform/**/*
  before_script:
    - apk add terraform --repository=http://dl-cdn.alpinelinux.org/alpine/v3.12/main
    - apk update && apk upgrade && apk add terraform    
    - cd terraform
    - rm -rf .terraform
    - terraform --version
    - terraform init
  script:    
    - terraform apply -input=false "planfile"
  dependencies:
    - plan
  when: manual
k8s-init:
  stage: k8s-init
  rules:
  - changes:
    - ansible/**/*
  before_script:    
    - apk update && apk upgrade && apk add ansible 
    - ssh-keyscan 192.168.1.12 >> ~/.ssh/known_hosts    
    - ssh-keyscan 192.168.1.24 >> ~/.ssh/known_hosts    
    - ssh-keyscan 192.168.1.25 >> ~/.ssh/known_hosts    
    - ssh-keyscan 192.168.1.26 >> ~/.ssh/known_hosts    
    - mkdir -p ~/.ssh/
    - cp ${id_rsa} ~/.ssh/id_rsa    
    - chmod  0600 ~/.ssh/id_rsa    
    - cd ansible    
  script:    
    - ansible-playbook -i inventory/my-cluster/hosts.ini site.yml